let uuidv4,dbPromise;_85e‍.x([["grantAuthToken",()=>grantAuthToken],["searchUserFromAuthToken",()=>searchUserFromAuthToken]]);_85e‍.w("uuid",[["v4",["uuidv4"],function(v){uuidv4=v}]]);_85e‍.w("./index",[["dbPromise",["dbPromise"],function(v){dbPromise=v}]]);/* 
Author: Unique Ratliff
Date: 11/26/2020
Description: An interactive message board that allows for user
    account functionality
 */





//Takes a user and returns a token
       const grantAuthToken = async (userId) => {
    const db = await _85e‍.a("dbPromise",dbPromise);
    const tokenString = _85e‍.a("uuidv4",uuidv4)();
    await db.run('INSERT INTO AuthTokens (token, userId) VALUES (?, ?);',
    tokenString, userId);

    return tokenString;
};_85e‍.j(["grantAuthToken"]);

//Takes a token and returns a user
       const searchUserFromAuthToken = async (authToken) => {
    const db = await _85e‍.a("dbPromise",dbPromise);
    const token = await db.get('SELECT * FROM AuthTokens WHERE token=?;', authToken);
    if(!token) {
        return null;
    }
    const user = await db.get('SELECT id, email, username FROM Users WHERE id=?', token.userId);

    return user;
};_85e‍.j(["searchUserFromAuthToken"]);